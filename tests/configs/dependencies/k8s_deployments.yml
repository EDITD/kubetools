apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {app.kubernetes.io/managed-by: kubetools}
  labels: {kubetools/name: dependencies-memcache-1, kubetools/project_name: dependencies,
    kubetools/role: dependency}
  name: dependencies-memcache-1
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels: {kubetools/name: dependencies-memcache-1, kubetools/project_name: dependencies,
      kubetools/role: dependency}
  template:
    metadata:
      labels: {kubetools/name: dependencies-memcache-1, kubetools/project_name: dependencies,
        kubetools/role: dependency}
    spec:
      containers:
      - command: [memcached, -u, root, -I, 10m]
        containerContext: memcache
        env:
        - {name: KUBE, value: 'true'}
        image: memcache:1.4.33
        imagePullPolicy: Always
        name: memcache-1

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {app.kubernetes.io/managed-by: kubetools}
  labels: {kubetools/name: dependencies-memcache-2, kubetools/project_name: dependencies,
    kubetools/role: dependency}
  name: dependencies-memcache-2
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels: {kubetools/name: dependencies-memcache-2, kubetools/project_name: dependencies,
      kubetools/role: dependency}
  template:
    metadata:
      labels: {kubetools/name: dependencies-memcache-2, kubetools/project_name: dependencies,
        kubetools/role: dependency}
    spec:
      containers:
      - command: [memcached, -u, root, -I, 10m]
        containerContext: memcache
        env:
        - {name: KUBE, value: 'true'}
        image: memcache:1.4.33
        imagePullPolicy: Always
        name: memcache-2
