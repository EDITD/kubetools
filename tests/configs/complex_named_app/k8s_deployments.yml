apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {app.kubernetes.io/managed-by: kubetools}
  labels: {kubetools/name: complex-named-app, kubetools/project_name: complex-named-app, kubetools/role: app}
  name: complex-named-app
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels: {kubetools/name: complex-named-app, kubetools/project_name: complex-named-app,
      kubetools/role: app}
  template:
    metadata:
      labels: {kubetools/name: complex-named-app, kubetools/project_name: complex-named-app, kubetools/role: app}
    spec:
      containers:
      - command: [generic-command]
        containerContext: generic-context
        env:
        - {name: KUBE, value: 'true'}
        image: generic-image
        imagePullPolicy: Always
        livenessProbe:
          httpGet: {path: /ping, port: 80}
          timeoutSeconds: 5
        name: complex-webserver
        readinessProbe:
          httpGet: {path: /ping, port: 80}
          timeoutSeconds: 5
